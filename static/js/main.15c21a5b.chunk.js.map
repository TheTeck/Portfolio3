{"version":3,"sources":["Components/BannerCursor/BannerCursor.jsx","Components/BannerHeader/BannerHeader.jsx","Components/Banner/Banner.jsx","Components/ContentContainer/ContentContainer.jsx","Components/ProfileImage/ProfileImage.jsx","Components/Paragraph/Paragraph.jsx","Components/ProjectLink/ProjectLink.jsx","Components/Contact/Contact.jsx","Components/TechList/TechList.jsx","Pages/HomePage/HomePage.jsx","Components/NavLink/NavLink.jsx","Components/ProjectNav/ProjectNav.jsx","Components/SectionHeader/SectionHeader.jsx","Components/ProjectSection/ProjectSection.jsx","Pages/PuzzlePage/PuzzlePage.jsx","Pages/MusicPage/MusicPage.jsx","Pages/OurAlleyPage/OurAlleyPage.jsx","Pages/MinesweeperPage/MinesweeperPage.jsx","Pages/WeatherPage/WeatherPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["BannerCursor","props","className","style","left","x","cursorSize","top","y","opacity","BannerHeader","main","sub","Banner","useState","cursorX","setCursorX","cursorY","setCursorY","cursorOpacity","setCursorOpacity","bannerTiles","setBannerTiles","screenWidth","setScreenWidth","useEffect","window","innerWidth","newTileLayout","i","j","push","populateBannerTileArray","addEventListener","onMouseMove","e","clientX","clientY","onMouseLeave","map","tile","index","ContentContainer","children","ProfileImage","src","alt","Paragraph","ProjectLink","history","useHistory","onClick","project","link","image","name","Contact","href","target","rel","TechList","tech","item","HomePage","projects","zipWeather","justpuzzles","sheetmusic","ouralley","minesweeper","NavLink","icon","text","ProjectNav","links","site","github","SectionHeader","active","title","ProjectSection","handleActivateSection","code","height","PuzzlePage","activeSection","setActiveSection","description","objective","section","MusicPage","MinesweeperPage","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15c21a5b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './BannerCursor.scss';\n\nexport default function BannerCursor (props) {\n\n    const cursorSize = 200;\n\n    return (\n        <div\n            className=\"cursor-aura\"\n            style={{\n                left: props.x - cursorSize / 2,\n                top: props.y - cursorSize / 2,\n                opacity: props.opacity\n            }}\n        ></div>\n    )\n}","import React from 'react';\n\nimport './BannerHeader.scss';\n\nexport default function BannerHeader (props) {\n    return (\n        <div className=\"bannerheader-container\">\n            <h1>{props.main}</h1>\n            { \n                props.sub ? <h2>{props.sub}</h2> : <></>\n            }\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\n\nimport BannerCursor from '../BannerCursor/BannerCursor';\nimport BannerHeader from '../BannerHeader/BannerHeader';\nimport './Banner.scss';\n\nexport default function Banner (props) {\n\n    const [cursorX, setCursorX] = useState(null);\n    const [cursorY, setCursorY] = useState(null);\n    const [cursorOpacity, setCursorOpacity] = useState(0);\n    const [bannerTiles, setBannerTiles] = useState([]);\n    const [screenWidth, setScreenWidth] = useState(0);\n\n    // Update state to show aura behind cursor\n    function handleCursorMovement(e) {\n        setCursorX(e.clientX);\n        setCursorY(e.clientY);\n        setCursorOpacity(1);\n    }\n\n    // Update state to hide the cursor aura\n    function handleHideCursor() {\n        setCursorOpacity(0);\n    }\n\n    // Fill array with coordinates for each of the tile\n    function populateBannerTileArray (screenWidth) {\n        const tileSize = 50;\n        const bannerHeight = 300;\n        const newTileLayout = [];\n\n        for (let i = 0; i < bannerHeight; i += tileSize) {\n            for (let j = 0; j < screenWidth; j += tileSize) {\n                newTileLayout.push([j, i]);\n            }\n        }\n        setBannerTiles(newTileLayout);\n    }\n\n    function updateScreenWidth () {\n        setScreenWidth(window.innerWidth);\n    }\n\n    useEffect(() => {\n        updateScreenWidth();\n    }, [])\n\n    useEffect(() => {\n        populateBannerTileArray(screenWidth);\n    }, [screenWidth])\n\n    \n\n    window.addEventListener(\"resize\", () => {\n        setScreenWidth(window.innerWidth !== screenWidth ? window.innerWidth : screenWidth);\n    })\n\n    return (\n        <div \n            className=\"banner-container\"\n            onMouseMove={handleCursorMovement}\n            onMouseLeave={handleHideCursor}\n        >\n            <BannerCursor x={cursorX} y={cursorY} opacity={cursorOpacity} />\n\n            <div className=\"banner-highlight\"></div>\n\n            {\n                bannerTiles.map((tile, index) => {\n                    return (\n                        <div\n                            key={index}\n                            className=\"banner-tile\"\n                            style={{\n                                top: tile[1],\n                                left: tile[0]\n                            }}\n                        ></div>\n                    )\n                })\n            }\n\n            <BannerHeader main={props.main} sub={props.sub} />\n        </div>\n    )\n}","import React from 'react';\n\nimport './ContentContainer.scss';\n\nexport default function ContentContainer (props) {\n    return (\n        <div className=\"content-container\">\n            {props.children}\n        </div>\n    )\n}","import React from 'react';\n\nimport './ProfileImage.scss';\n\nexport default function ProfileImage (props) {\n    return (\n        <div className=\"profile-container\">\n            <div className=\"profileimage-container\">\n                <img src=\"headshot.png\" alt=\"John Teckemeyer smiling into camera\" />\n            </div>\n            <div className=\"image-label\">About Me</div>\n        </div>\n    )\n}","import React from 'react';\n\nimport './Paragraph.scss';\n\nexport default function Paragraph (props) {\n    return (\n        <div className=\"paragraph-container\">\n            {props.children}\n        </div>\n    )\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './ProjectLink.scss';\n\nexport default function ProjectLink (props) {\n\n    const history = useHistory();\n\n    function handleProjectClick () {\n        history.push(props.project.link);\n    }\n\n    return (\n        <div className=\"projectlink-container\">\n            <button className=\"projectimage-container\" onClick={handleProjectClick}>\n                <img src={props.project.image} alt={props.project.alt} />\n                <div className=\"project-label\">{props.project.name}</div>\n            </button>\n        </div>\n    )\n}","import React from 'react';\n\nimport './Contact.scss';\n\nexport default function Contact (props) {\n    return (\n        <div className=\"contact-container\">\n            <div className=\"resume-container\">\n                <a href=\"resume.pdf\" target=\"_blank\">\n                    <div className=\"material-icons resume-icon\">description</div>\n                    <div className=\"resume-text\">Resume</div>\n                </a>\n            </div>\n            <div className=\"contact-info-container\">\n                <p>Email: <a href=\"mailto:johnteckemeyer@gmail.com\">johnteckemeyer@gmail.com</a></p>\n                <p>GitHub: <a href=\"https://github.com/TheTeck\" rel=\"noreferrer\" target=\"_blank\">github.com/TheTeck</a></p>\n                <p>LinkedIn: <a href=\"https://www.linkedin.com/in/john-teckemeyer/\" rel=\"noreferrer\" target=\"_blank\">linkedin.com/in/john-teckemeyer</a></p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport './TechList.scss';\n\nexport default function TechList (props) {\n\n    return (\n        <div className=\"tech-display\">\n            <div className=\"tech-container\">\n                {\n                    props.tech.map((item, index) => {\n                        return (\n                            <div key={index}>{item}</div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport Banner from '../../Components/Banner/Banner';\nimport ContentContainer from '../../Components/ContentContainer/ContentContainer';\nimport ProfileImage from '../../Components/ProfileImage/ProfileImage';\nimport Paragraph from '../../Components/Paragraph/Paragraph';\nimport ProjectLink from '../../Components/ProjectLink/ProjectLink';\nimport Contact from '../../Components/Contact/Contact';\nimport TechList from '../../Components/TechList/TechList';\nimport './HomePage.scss';\n\nexport default function HomePage (props) {\n\n    const tech = ['Javascript', 'Typescript', 'Ruby', 'Python', 'C#', 'HTML', 'CSS', 'Sass', \n                  'jQuery', 'React', 'Express', 'Node', 'Django', 'RESTful APIs', 'MongoDB',\n                  'PostgreSQL', 'Git/GitHub'];\n\n    const projects = {\n        zipWeather: {\n            name: \"Zip Weather\",\n            image: \"zipweather.png\",\n            link: \"/weather\",\n            alt: \"Weather data for today\"\n        },\n        justpuzzles: {\n            name: \"Just Puzzles\",\n            image: \"polygonpuzzle.png\",\n            link: \"/puzzle\",\n            alt: \"Polygonal puzzle scattered in pieces\"\n        },\n        sheetmusic: {\n            name: \"Sheet Music Maker\",\n            image: \"sheetmusic.png\",\n            link: \"/music\",\n            alt: \"First page of some sheet music in the editor\"\n        },\n        ouralley: {\n            name: \"Our Alley\",\n            image: \"ouralley_playdates.png\",\n            link: \"/ouralley\",\n            alt: \"A list of playdates, each with all the dogs going listed\"\n        },\n        minesweeper: {\n            name: \"Minesweeper\",\n            image: \"minesweeper.png\",\n            link: \"/minesweeper\",\n            alt: \"An example of the game, Minesweeper, with some cells exposed\"\n        }\n    }\n\n    return (\n        <div className=\"homepage-container\">\n            <Banner main=\"John Teckemeyer\" sub=\"Full Stack Web Development\" />\n            <ContentContainer>\n                <div className=\"section-wrapper\">\n                    <ProfileImage />\n                    <Paragraph>\n                        I am a full-stack web developer out of the San Francisco Bay Area. Some of my greatest passions in life revolve around creating beautifully designed products that people enjoy using. Recently, I have transitioned from making physical, hand-crafted instruments to software engineering, because, in the digital space, I am only limited by my creativity and skills and with enough effort anything can be achieved. Now, I am looking for a position within a team where I can help create applications that people will love to use and, hopefully, help them achieve betterment in life.\n                    </Paragraph>\n                </div>\n            </ContentContainer>\n\n            <div className=\"skills-label\">Technical Skills</div>\n            <div className=\"skill-wrapper\">\n                <TechList tech={tech} />\n            </div>\n\n            <Contact />\n\n            <h1>Projects</h1>\n            <ContentContainer>\n                <div className=\"section-wrapper projects-wrapper\">\n                    <ProjectLink project={projects[\"zipWeather\"]} />\n                    <ProjectLink project={projects[\"sheetmusic\"]} />\n                    <ProjectLink project={projects[\"ouralley\"]} />\n                    <ProjectLink project={projects[\"justpuzzles\"]} />\n                    <ProjectLink project={projects[\"minesweeper\"]} />\n                </div>\n            </ContentContainer>\n        </div>\n    )\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './NavLink.scss';\n\nexport default function NavLink (props) {\n\n    const history = useHistory();\n\n    function handleLinkClick () {\n        if (props.link === \"/home\")\n            history.push(props.link);\n    }\n\n    return (\n        <>\n            {\n                props.link === \"/home\" ? \n                    <button className=\"nav-back\" onClick={handleLinkClick}>\n                        <div className=\"material-icons custom-icon\">{props.icon}</div>\n                        <div className=\"link-text\">{props.text}</div>\n                    </button>\n                :\n                    <a  className=\"nav-link\" href={props.link} rel=\"noreferrer\" target=\"_blank\">\n                        <div className=\"material-icons custom-icon\">{props.icon}</div>\n                        <div className=\"link-text\">{props.text}</div>\n                    </a>\n            }\n        </>\n    )\n}","import React from 'react';\n\nimport NavLink from '../NavLink/NavLink';\nimport './ProjectNav.scss';\n\nexport default function ProjectNav (props) {\n    return (\n        <div className=\"projectnav-container\">\n            <NavLink icon=\"arrow_back\" text=\"Back\" link=\"/home\" />\n            <NavLink icon=\"web_asset\" text=\"Site\" link={props.links.site} />\n            <NavLink icon=\"code\" text=\"GitHub\" link={props.links.github} />\n        </div>\n    )\n}","import React from 'react';\n\nimport './SectionHeader.scss';\n\nexport default function SectionHeader (props) {\n    return (\n        <div className=\"sectionheader-container\">\n            {\n                props.active ? <div className=\"material-icons section-icons\">remove</div>\n                : <div className=\"material-icons section-icons\">add</div>\n            }\n            <div className=\"sectionheader-title\">{props.title}</div>\n            \n        </div>\n    )\n}","import React from 'react';\n\nimport SectionHeader from '../SectionHeader/SectionHeader';\nimport './ProjectSection.scss';\n\nexport default function ProjectSection (props) {\n\n    function handleSectionClick () {\n        props.handleActivateSection(props.code);\n    }\n\n    return (\n        <button className=\"section-container\" onClick={handleSectionClick}>\n            <SectionHeader title={props.title} active={props.active === props.code} />\n            <div \n                className=\"section-content-container\"\n                style={props.active === props.code ? {height: \"100%\"} : {height: \"0px\"}}\n            >\n                <div className=\"section-content\">{props.children}</div>\n            </div>\n        </button>\n    )\n}","import React, { useState } from 'react';\n\nimport ContentContainer from '../../Components/ContentContainer/ContentContainer';\nimport ProjectNav from '../../Components/ProjectNav/ProjectNav';\nimport Banner from '../../Components/Banner/Banner';\nimport Paragraph from '../../Components/Paragraph/Paragraph';\nimport ProjectSection from '../../Components/ProjectSection/ProjectSection';\nimport TechList from '../../Components/TechList/TechList';\nimport './PuzzlePage.scss';\n\nexport default function PuzzlePage (props) {\n\n    const [activeSection, setActiveSection] = useState('des');\n\n    const links = {\n        site: \"https://just-puzzles.herokuapp.com/\",\n        github: \"https://github.com/TheTeck/JustPuzzles\"\n    }\n\n    const tech = ['HTML', 'SCSS', 'Javascript', 'React', 'Node', 'Express', 'MongoDB', 'AWS S3'];\n\n    const description = <Paragraph><strong>Just Puzzles</strong> is an online source for puzzles that takes an image and breaks it up into the number of pieces and piece shape specified by the user. As the admin, I can upload many images ahead of time and have them released upon the date given to each image for a hands-off daily update. The puzzle mechanics and image selections were designed to create a enjoyable, relaxing and satisfying user experience.</Paragraph>\n    const objective = <Paragraph>The focus of this application was to develop my CSS skills as well as work with more complex algorithms than normally found in front end development.</Paragraph>\n\n    function handleActivateSection (section) {\n        if (activeSection === section) {\n            setActiveSection(null);\n        } else {\n            setActiveSection(section);\n        }\n    }\n\n    return (\n        <div className=\"puzzlepage-container\">\n            <Banner main=\"Just Puzzles\" />\n            <ContentContainer>\n                <ProjectNav links={links} />\n                <ProjectSection active={activeSection} code=\"des\" title=\"Description\" handleActivateSection={handleActivateSection}>\n                    {description}\n                    <div className=\"tech-name\">Technologies Used</div>\n                    <TechList tech={tech} />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"obj\" title=\"Objective\" handleActivateSection={handleActivateSection}>\n                    {objective}\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"img\" title=\"Images\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"puzzles_homepage.png\" alt=\"All available puzzles in order of release\"/>\n                    <img className=\"site-shot\" src=\"puzzles_options.png\" alt=\"Puzzle options that determine how to generate the puzzle\" />\n                    <img className=\"site-shot\" src=\"puzzles_tile.png\" alt=\"Scattered puzzle pieces in square tile shape\" />\n                    <img className=\"site-shot\" src=\"polygonpuzzle.png\" alt=\"Scattered puzzle pieces in random polygonal shapes\" />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"cod\" title=\"Code Highlights\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"movepiece.png\" alt=\"Code for moving a puzzle piece and all connected pieces\" />\n                    <Paragraph>Whenever a piece is active and the mouse moves, firing an event, the movePiece function is called. In the movePiece function, the for loop goes through all of the connected pieces attached to the active piece and updates their location based upon the location of the active piece by calling the updatePieceLocation function. In the updatePieceLocation function, if first checks to see if the piece is in either the first row or column. If it is, then it does not need to include a buffer offset, otherwise it does.</Paragraph>\n                </ProjectSection>               \n            </ContentContainer>\n        </div>\n    )\n}","import React, { useState } from 'react';\n\nimport ContentContainer from '../../Components/ContentContainer/ContentContainer';\nimport ProjectNav from '../../Components/ProjectNav/ProjectNav';\nimport Banner from '../../Components/Banner/Banner';\nimport Paragraph from '../../Components/Paragraph/Paragraph';\nimport ProjectSection from '../../Components/ProjectSection/ProjectSection';\nimport TechList from '../../Components/TechList/TechList';\nimport './MusicPage.scss';\n\nexport default function MusicPage (props) {\n\n    const [activeSection, setActiveSection] = useState('des');\n\n    const links = {\n        site: \"https://sheetmusicmaker.herokuapp.com\",\n        github: \"https://github.com/TheTeck/Sheet-Music-Maker\"\n    }\n\n    const tech = ['HTML', 'CSS', 'Javascript', 'React', 'Node', 'Express', 'MongoDB', 'AWS S3'];\n\n    const description = <Paragraph><strong>Sheet Music Maker</strong> is a sheet music editing application with a community aspect to it. A user can share their works with any other user that follows them and vice versa. This project was done over the course of one week and in that time I was only able to get the editor to allow the input of just quarter notes and their deletion from the staves.</Paragraph>\n    const objective = <Paragraph>This application was my final project for my full-stack bootcamp and was made to showcase my collective skills learned up to that point. The main focus of it's development was with the front end, using React.</Paragraph>\n\n    function handleActivateSection (section) {\n        if (activeSection === section) {\n            setActiveSection(null);\n        } else {\n            setActiveSection(section);\n        }\n    }\n\n    return (\n        <div className=\"musicpage-container\">\n            <Banner main=\"Sheet Music Maker\" />\n            <ContentContainer>\n                <ProjectNav links={links} />\n                <ProjectSection active={activeSection} code=\"des\" title=\"Description\" handleActivateSection={handleActivateSection}>\n                    {description}\n                    <div className=\"tech-name\">Technologies Used</div>\n                    <TechList tech={tech} />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"obj\" title=\"Objective\" handleActivateSection={handleActivateSection}>\n                    {objective}\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"img\" title=\"Images\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"musiclandingpage.png\" alt=\"Sheet Music Maker login or signup page\" />\n                    <img className=\"site-shot\" src=\"musichomepage.png\" alt=\"Sheet Music Maker homepage\" />\n                    <img className=\"site-shot\" src=\"musicopusindexpage.png\" alt=\"All of the user's sheet music\" />\n                    <img className=\"site-shot\" src=\"musiceditopuspage.png\" alt=\"The edit screen to write music on staves\" />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"cod\" title=\"Code Highlights\" handleActivateSection={handleActivateSection}>\n                    <Paragraph>In the sheet music editor, the \"sheet music\" is made of many components (as is the way of React). In the Page components, there are Staff components. And in each Staff component, there are Measure components. When a note is written by the user on the sheet music, it begins to build a string that represents the music.</Paragraph>\n                    <img className=\"site-shot\" src=\"inmeasure.png\" alt=\"Code showing state being added to a string and lifted\" />\n                    <Paragraph>In handleStaffClick function (within the Measure component), when a note is entered onto a staff, its duration and pitch is represented as a string and concatenated to the string which makes up the current measure and then lifted to the parent Staff component.</Paragraph>\n                    <img className=\"site-shot\" src=\"instaff.png\" alt=\"Code showing more state being added to a string and lifted\" />\n                    <Paragraph>In the updateMeasure function (within the Staff component), the measure that had been updated is written over by the string value held by the 'notes' parameter and then calls updateStaff, concatenating all the strings representing the measures of the staff and lifts the data back to the parent Page component.</Paragraph>\n                    <img className=\"site-shot\" src=\"inpage.png\" alt=\"Even more code showing more state being added to a string and lifted\" />\n                    <Paragraph>Here in the updateStaff function (within the Page component), it works much like the updateMeasure in that it updates the active Staff and concatenates the string representing with the rest of the Staves and updates the entire Page's music with a string.</Paragraph>\n                </ProjectSection>                \n            </ContentContainer>\n        </div>\n    )\n}","import React, { useState } from 'react';\n\nimport ContentContainer from '../../Components/ContentContainer/ContentContainer';\nimport ProjectNav from '../../Components/ProjectNav/ProjectNav';\nimport Banner from '../../Components/Banner/Banner';\nimport Paragraph from '../../Components/Paragraph/Paragraph';\nimport ProjectSection from '../../Components/ProjectSection/ProjectSection';\nimport TechList from '../../Components/TechList/TechList';\nimport './OurAlleyPage.scss';\n\nexport default function PuzzlePage (props) {\n\n    const [activeSection, setActiveSection] = useState('des');\n\n    const links = {\n        site: \"https://ouralley.herokuapp.com/\",\n        github: \"https://github.com/farazborjian/OurAlley\"\n    }\n\n    const tech = ['HTML', 'CSS', 'Python', 'Django', 'PostgreSQL', 'Materialize'];\n\n    const description = <Paragraph><strong>Our Alley</strong> is a social networking application that helps bring lonely dogs together by letting users search for other local dogs and propose playdates. This was a team project in which I was the scrum and api master. A major focus of mine on this project was implementing the google maps api to geolocate other nearby users.</Paragraph>\n    const objective = <Paragraph>The main focus of this application in particular was to gain experience working as part of a team. We were a team of 3 people and we each took on specific roles in addition to programming our assigned tasks.</Paragraph>\n\n    function handleActivateSection (section) {\n        if (activeSection === section) {\n            setActiveSection(null);\n        } else {\n            setActiveSection(section);\n        }\n    }\n\n    return (\n        <div className=\"ouralley-container\">\n            <Banner main=\"Our Alley\" />\n            <ContentContainer>\n                <ProjectNav links={links} />\n                <ProjectSection active={activeSection} code=\"des\" title=\"Description\" handleActivateSection={handleActivateSection}>\n                    {description}\n                    <div className=\"tech-name\">Technologies Used</div>\n                    <TechList tech={tech} />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"obj\" title=\"Objective\" handleActivateSection={handleActivateSection}>\n                    {objective}\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"img\" title=\"Images\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"ouralley.png\" alt=\"Login or signup page\" />\n                    <img className=\"site-shot\" src=\"ouralley_mypets.png\" alt=\"All the user's pets\" />\n                    <img className=\"site-shot\" src=\"ouralley_playdate.png\" alt=\"Creating a playdate to add dogs. Also shows dogs invited.\" />\n                    <img className=\"site-shot\" src=\"ouralley_playdates.png\" alt=\"List of all the playdates with all the information displayed\" />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"cod\" title=\"Code Highlights\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"getlocaldogs.png\" alt=\"Code using helper functions to locate the user and surrounding local dogs\" />\n                    <Paragraph>One of the more complicated parts of this application that I was in charge of was the implementation of searching more local dogs. Here, depending on whether the user used an explicit location, the algorithm will use that location or the user's home address, using a helper function to convert the address to latitude and longitude coordinates. Then the function filters through all other users' dogs that have a location within 2 miles, again using a helper function to get the distance of each dog.</Paragraph>\n                    <img className=\"site-shot\" src=\"helperfunctions.png\" alt=\"Code that helps with getting latitude and longitude coordinates from an address and finding the distance between two point on Earth.\" />\n                    <Paragraph>The first helper function, the haversine function, returns the distance between two points on the surface of the Earth. The second helper function, extract_lat_long_via_address, makes a call the the Google Maps api to get the latitude and longitude coordinates for a given address.</Paragraph>\n                </ProjectSection>                \n            </ContentContainer>\n        </div>\n    )\n}","import React, { useState } from 'react';\n\nimport ContentContainer from '../../Components/ContentContainer/ContentContainer';\nimport ProjectNav from '../../Components/ProjectNav/ProjectNav';\nimport Banner from '../../Components/Banner/Banner';\nimport Paragraph from '../../Components/Paragraph/Paragraph';\nimport ProjectSection from '../../Components/ProjectSection/ProjectSection';\nimport TechList from '../../Components/TechList/TechList';\nimport './MinesweeperPage.scss';\n\nexport default function MinesweeperPage (props) {\n\n    const [activeSection, setActiveSection] = useState('des');\n\n    const links = {\n        site: \"https://TheTeck.github.io/Minesweeper2\",\n        github: \"https://github.com/TheTeck/Minesweeper2\"\n    }\n\n    const tech = ['Javascript', 'React', 'Sass'];\n\n    const description = <Paragraph><strong>Minesweeper</strong> is a single-player game in which the objective is to clear a rectangular grid of cells by avoiding those with mines and revealing all empty cells. Any empty cell can show a number indicating the quantity of mines surrounding it. It is with these numbers that the player can use logic to deduce the locations of the mines. The game ends when either the player reveals a mine or has cleared all empty cells.</Paragraph>\n    const objective = <Paragraph>Minesweeper was my first project I developed in my full-stack bootcamp. It was done with HTML, CSS and Javascript and I simply wanted to recreate it using the React framework as a practice in total refactoring of the code.</Paragraph>\n\n    function handleActivateSection (section) {\n        if (activeSection === section) {\n            setActiveSection(null);\n        } else {\n            setActiveSection(section);\n        }\n    }\n\n    return (\n        <div className=\"minesweeperpage-container\">\n            <Banner main=\"Minesweeper\" />\n            <ContentContainer>\n                <ProjectNav links={links} />\n                <ProjectSection active={activeSection} code=\"des\" title=\"Description\" handleActivateSection={handleActivateSection}>\n                    {description}\n                    <div className=\"tech-name\">Technologies Used</div>\n                    <TechList tech={tech} />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"obj\" title=\"Objective\" handleActivateSection={handleActivateSection}>\n                    {objective}\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"img\" title=\"Images\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"minesweeper.png\" alt=\"The game Minesweeper in an 80's retro style\" />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"cod\" title=\"Code Highlights\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"creategame.png\" alt=\"Code showing the creation of the game board\" />\n                    <Paragraph>Every time a new game is started, a new array is created that is filled with instances of the CellData class. The CellData class has most instance variables starting with default values, but then each instance is supplied a value created by the functions populateBombs and popoulateNumbers.</Paragraph>\n                    <img className=\"site-shot\" src=\"exposecells.png\" alt=\"Code showing recursive functionality to expose more of the game board\" />\n                    <Paragraph>When a user left-clicks on a cell, that cell becomes exposed. If the cell is not empty, such as a number or bomb, then the exposeMore function is done. However, if the cell is empty, the function is going to recursively call itself for each cell that surrounds it, if they are not already exposed.</Paragraph>\n                </ProjectSection>               \n            </ContentContainer>\n        </div>\n    )\n}","import React, { useState } from 'react';\n\nimport ContentContainer from '../../Components/ContentContainer/ContentContainer';\nimport ProjectNav from '../../Components/ProjectNav/ProjectNav';\nimport Banner from '../../Components/Banner/Banner';\nimport Paragraph from '../../Components/Paragraph/Paragraph';\nimport ProjectSection from '../../Components/ProjectSection/ProjectSection';\nimport TechList from '../../Components/TechList/TechList';\nimport './WeatherPage.scss';\n\nexport default function PuzzlePage (props) {\n\n    const [activeSection, setActiveSection] = useState('des');\n\n    const links = {\n        site: \"https://ziipweather.herokuapp.com/\",\n        github: \"https://github.com/TheTeck/Weather\"\n    }\n\n    const tech = ['HTML', 'SCSS', 'Javascript', 'React', 'Node', 'Express', 'Open Weather API', 'Geolocation DB API'];\n\n    const description = <Paragraph><strong>Zip Weather</strong> is a site that will retrieve and display weather data for a given zipcode location. It will display the current weather, 24 hour forecasts and 7 day forecasts.</Paragraph>\n    const objective = <Paragraph>The focus of this application to was two things: First, to further practice using 3rd party apis instead of using a user defined database. Second, to reinforce and see what I could accomplish in React without being burdoned with the designing of the UI (I just copied an actual website).</Paragraph>\n\n    function handleActivateSection (section) {\n        if (activeSection === section) {\n            setActiveSection(null);\n        } else {\n            setActiveSection(section);\n        }\n    }\n\n    return (\n        <div className=\"weatherpage-container\">\n            <Banner main=\"Zip Weather\" />\n            <ContentContainer>\n                <ProjectNav links={links} />\n                <ProjectSection active={activeSection} code=\"des\" title=\"Description\" handleActivateSection={handleActivateSection}>\n                    {description}\n                    <div className=\"tech-name\">Technologies Used</div>\n                    <TechList tech={tech} />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"obj\" title=\"Objective\" handleActivateSection={handleActivateSection}>\n                    {objective}\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"img\" title=\"Images\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"zipweather.png\" alt=\"Zip Weather homepage\" />\n                    <img className=\"site-shot\" src=\"zipweatherhourly.png\" alt=\"Zip Weather hourly forecast page\" />\n                    <img className=\"site-shot\" src=\"zipweatherdays.png\" alt=\"Zip Weather seven day forecast page\" />\n                </ProjectSection>\n                <ProjectSection active={activeSection} code=\"cod\" title=\"Code Highlights\" handleActivateSection={handleActivateSection}>\n                    <img className=\"site-shot\" src=\"zipweatherapicall.png\" alt=\"Code showing conditional api calls\"/>\n                    <Paragraph>For the most part, the user would enter a zipcode which would then be passed as a parameter to the API call. However, since there needs to be some kind of data displayed to the user when the application opens, and we can't wait for the user to enter a zipcode, a call will instantly be made to the backend with a value of 'local'. This is trigger a call to the Geolocation DB API to retrieve the user's current location. *This worked perfectly locally, but once the application was uploaded to a server, it seems to get the server's location.</Paragraph>\n                    <img className=\"site-shot\" src=\"zipweathercomponents.png\" alt=\"Code showing component usage\" />\n                    <Paragraph>This is an example of how I used components to abstract out redundant code. Here, you can see there are a lot of couplings of icons with data that are styled the same, so I just put them in a reusable component.</Paragraph>\n                </ProjectSection>               \n            </ContentContainer>\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport HomePage from './Pages/HomePage/HomePage';\nimport PuzzlePage from './Pages/PuzzlePage/PuzzlePage';\nimport MusicPage from './Pages/MusicPage/MusicPage';\nimport OurAlleyPage from './Pages/OurAlleyPage/OurAlleyPage';\nimport MinesweeperPage from './Pages/MinesweeperPage/MinesweeperPage';\nimport WeatherPage from './Pages/WeatherPage/WeatherPage';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n    <Router basename=\"/Portfolio3\">\n      <Switch>\n        <Route exact path=\"/home\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/puzzle\">\n          <PuzzlePage />\n        </Route>\n        <Route exact path=\"/music\">\n          <MusicPage />\n        </Route>\n        <Route exact path=\"/ouralley\">\n          <OurAlleyPage />\n        </Route>\n        <Route exact path=\"/minesweeper\">\n          <MinesweeperPage />\n        </Route>\n        <Route exact path=\"/weather\">\n          <WeatherPage />\n        </Route>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}